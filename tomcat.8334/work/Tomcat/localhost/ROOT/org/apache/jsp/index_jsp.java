/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.28
 * Generated at: 2017-01-19 12:27:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <title>Hello WebSocket</title>\n");
      out.write("    <link href=\"resources/css/bootstrap/bootstrap.min.css\" rel=\"stylesheet\">\n");
      out.write("    <style>\n");
      out.write("        body {\n");
      out.write("            background-color: #f5f5f5;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        #main-content {\n");
      out.write("            max-width: 940px;\n");
      out.write("            padding: 2em 3em;\n");
      out.write("            margin: 0 auto 20px;\n");
      out.write("            background-color: #fff;\n");
      out.write("            border: 1px solid #e5e5e5;\n");
      out.write("            -webkit-border-radius: 5px;\n");
      out.write("            -moz-border-radius: 5px;\n");
      out.write("            border-radius: 5px;\n");
      out.write("        }\n");
      out.write("    </style>\n");
      out.write("    <script src=\"resources/js/plugins/jquery/jquery.min.js\"></script>\n");
      out.write("    <script src=\"resources/js/plugins/sockjs.min.js\"></script>\n");
      out.write("    <script src=\"resources/js/plugins/stomp.min.js\"></script>\n");
      out.write("\n");
      out.write("    <script>\n");
      out.write("        var stompClient = null;\n");
      out.write("\n");
      out.write("        function setConnected(connected) {\n");
      out.write("            $(\"#connect\").prop(\"disabled\", connected);\n");
      out.write("            $(\"#disconnect\").prop(\"disabled\", !connected);\n");
      out.write("            if (connected) {\n");
      out.write("                $(\"#conversation\").show();\n");
      out.write("            }\n");
      out.write("            else {\n");
      out.write("                $(\"#conversation\").hide();\n");
      out.write("            }\n");
      out.write("            $(\"#greetings\").html(\"\");\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function connect() {\n");
      out.write("            var socket = new SockJS('/gs-guide-websocket');\n");
      out.write("            stompClient = Stomp.over(socket);\n");
      out.write("            stompClient.connect({}, function (frame) {\n");
      out.write("                setConnected(true);\n");
      out.write("                console.log('Connected: ' + frame);\n");
      out.write("                stompClient.subscribe('/topic/greetings', function (greeting) {\n");
      out.write("                    showGreeting(JSON.parse(greeting.body).content);\n");
      out.write("                });\n");
      out.write("            });\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function disconnect() {\n");
      out.write("            if (stompClient != null) {\n");
      out.write("                stompClient.disconnect();\n");
      out.write("            }\n");
      out.write("            setConnected(false);\n");
      out.write("            console.log(\"Disconnected\");\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function sendName() {\n");
      out.write("            stompClient.send(\"/app/hello\", {}, JSON.stringify({'name': $(\"#name\").val()}));\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function showGreeting(message) {\n");
      out.write("            $(\"#greetings\").append(\"<tr><td>\" + message + \"</td></tr>\");\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        $(function () {\n");
      out.write("            $(\"form\").on('submit', function (e) {\n");
      out.write("                e.preventDefault();\n");
      out.write("            });\n");
      out.write("            $( \"#connect\" ).click(function() { connect(); });\n");
      out.write("            $( \"#disconnect\" ).click(function() { disconnect(); });\n");
      out.write("            $( \"#send\" ).click(function() { sendName(); });\n");
      out.write("        });\n");
      out.write("    </script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<noscript><h2 style=\"color: #ff0000\">Seems your browser doesn't support Javascript! Websocket relies on Javascript being\n");
      out.write("    enabled. Please enable\n");
      out.write("    Javascript and reload this page!</h2></noscript>\n");
      out.write("<div id=\"main-content\" class=\"container\">\n");
      out.write("    <div class=\"row\">\n");
      out.write("        <div class=\"col-md-6\">\n");
      out.write("            <form class=\"form-inline\">\n");
      out.write("                <div class=\"form-group\">\n");
      out.write("                    <label for=\"connect\">WebSocket connection:</label>\n");
      out.write("                    <button id=\"connect\" class=\"btn btn-default\" type=\"submit\">Connect</button>\n");
      out.write("                    <button id=\"disconnect\" class=\"btn btn-default\" type=\"submit\" disabled=\"disabled\">Disconnect\n");
      out.write("                    </button>\n");
      out.write("                </div>\n");
      out.write("            </form>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"col-md-6\">\n");
      out.write("            <form class=\"form-inline\">\n");
      out.write("                <div class=\"form-group\">\n");
      out.write("                    <label for=\"name\">What is your name?</label>\n");
      out.write("                    <input type=\"text\" id=\"name\" class=\"form-control\" placeholder=\"Your name here...\">\n");
      out.write("                </div>\n");
      out.write("                <button id=\"send\" class=\"btn btn-default\" type=\"submit\">Send</button>\n");
      out.write("            </form>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("    <div class=\"row\">\n");
      out.write("        <div class=\"col-md-12\">\n");
      out.write("            <table id=\"conversation\" class=\"table table-striped\">\n");
      out.write("                <thead>\n");
      out.write("                <tr>\n");
      out.write("                    <th>Greetings</th>\n");
      out.write("                </tr>\n");
      out.write("                </thead>\n");
      out.write("                <tbody id=\"greetings\">\n");
      out.write("                </tbody>\n");
      out.write("            </table>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("    </form>\n");
      out.write("</div>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
